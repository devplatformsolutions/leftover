---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
	annotations:
		controller-gen.kubebuilder.io/version: v0.18.0
	name: leftovernodepools.gpu.devplatforms.io
spec:
	group: gpu.devplatforms.io
	names:
		categories:
		- gpu
		- leftover
		kind: LeftoverNodePool
		listKind: LeftoverNodePoolList
		plural: leftovernodepools
		shortNames:
		- lonp
		singular: leftovernodepool
	scope: Cluster
	versions:
	- name: v1alpha1
		schema:
			openAPIV3Schema:
				description: LeftoverNodePool is the Schema for the leftovernodepools API
				properties:
					apiVersion:
						description: |-
							APIVersion defines the versioned schema of this representation of an object.
							Servers should convert recognized schemas to the latest internal value, and
							may reject unrecognized values.
							More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
						type: string
					kind:
						description: |-
							Kind is a string value representing the REST resource this object represents.
							Servers may infer this from the endpoint the client submits requests to.
							Cannot be updated.
							In CamelCase.
							More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
						type: string
					metadata:
						type: object
					spec:
						description: |-
							LeftoverNodePoolSpec defines the desired state of LeftoverNodePool
							Exactly one of nodeClassName or nodeClassSelector must be set.
						properties:
							budgetsNodes:
								default: 10%
								description: Karpenter disruption budgets (nodes percent/absolute;
									stored as single budget entry)
								type: string
							capacityType:
								default: spot
								description: 'Capacity type preference: spot (default) or on-demand.'
								enum:
								- spot
								- on-demand
								type: string
							consolidateAfter:
								default: 2m
								description: ConsolidateAfter duration (e.g. "2m", "5m")
								type: string
							families:
								description: GPU instance families filter (e.g. g4dn, g5, p4). Empty
									= implementation defined discovery.
								items:
									type: string
								type: array
							labels:
								additionalProperties:
									type: string
								description: Additional node labels to set on provisioned nodes
								type: object
							maxInstanceTypes:
								default: 5
								description: Max distinct instance types to include in NodePool requirements.
								minimum: 1
								type: integer
							maxZones:
								default: 2
								description: Max distinct zones to include.
								minimum: 1
								type: integer
							minGPUs:
								default: 1
								description: Minimum GPUs per instance type considered.
								minimum: 1
								type: integer
							minSpotScore:
								default: 5
								description: Minimum acceptable spot score (0..10). If none meet,
									fallback logic applies.
								format: int32
								maximum: 10
								minimum: 0
								type: integer
							nodeClassName:
								description: Exact EC2NodeClass name (exclusive with nodeClassSelector)
								type: string
							nodeClassSelector:
								additionalProperties:
									type: string
								description: Label selector for EC2NodeClass (must match exactly one)
								type: object
							onDemandFallback:
								default: true
								description: If true and no spot choice meets MinSpotScore, fallback
									to on-demand.
								type: boolean
							region:
								description: AWS region (e.g. us-east-1)
								minLength: 1
								type: string
							requeueMinutes:
								default: 7
								description: Requeue interval in minutes.
								minimum: 1
								type: integer
							securityGroupSelectorTags:
								additionalProperties:
									type: string
								description: Optional SG selector tags
								type: object
							subnetSelectorTags:
								additionalProperties:
									type: string
								description: Optional subnet selector tags (passed through to EC2NodeClass
									or used for extra logic)
								type: object
							taints:
								description: 'Taints list (string form: key[=value]:Effect) Effect
									in {NoSchedule,PreferNoSchedule,NoExecute}'
								items:
									type: string
								type: array
							targetCount:
								default: 2
								description: Target pod count used in scoring heuristics.
								format: int32
								type: integer
						required:
						- region
						type: object
						x-kubernetes-validations:
						- message: one of nodeClassName or nodeClassSelector must be set
							rule: has(self.nodeClassName) || (has(self.nodeClassSelector) && size(self.nodeClassSelector)
								> 0)
						- message: only one of nodeClassName or nodeClassSelector may be set
							rule: '!(has(self.nodeClassName) && has(self.nodeClassSelector))'
					status:
						description: LeftoverNodePoolStatus defines the observed state of LeftoverNodePool.
						properties:
							conditions:
								items:
									description: Condition contains details for one aspect of the current
										state of this API Resource.
									properties:
										lastTransitionTime:
											description: |-
												lastTransitionTime is the last time the condition transitioned from one status to another.
												This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
											format: date-time
											type: string
										message:
											description: |-
												message is a human readable message indicating details about the transition.
												This may be an empty string.
											maxLength: 32768
											type: string
										observedGeneration:
											description: |-
												observedGeneration represents the .metadata.generation that the condition was set based upon.
												For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
												with respect to the current state of the instance.
											format: int64
											minimum: 0
											type: integer
										reason:
											description: |-
												reason contains a programmatic identifier indicating the reason for the condition's last transition.
												Producers of specific condition types may define expected values and meanings for this field,
												and whether the values are considered a guaranteed API.
												The value should be a CamelCase string.
												This field may not be empty.
											maxLength: 1024
											minLength: 1
											pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
											type: string
										status:
											description: status of the condition, one of True, False, Unknown.
											enum:
											- "True"
											- "False"
											- Unknown
											type: string
										type:
											description: type of condition in CamelCase or in foo.example.com/CamelCase.
											maxLength: 316
											pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
											type: string
									required:
									- lastTransitionTime
									- message
									- reason
									- status
									- type
									type: object
								type: array
							lastPriceUSD:
								type: string
							lastScore:
								type: integer
							lastSyncTime:
								format: date-time
								type: string
							selectedInstanceTypes:
								items:
									type: string
								type: array
							selectedZones:
								items:
									type: string
								type: array
						type: object
				required:
				- spec
				type: object
		served: true
		storage: true
		subresources:
			status: {}
